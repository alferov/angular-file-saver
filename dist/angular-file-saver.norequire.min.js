function FileSaver(a,b,c){function d(a,d,e){try{b(a,d,e)}catch(a){c.handleErrors(a.message)}}return{saveAs:function(a,b,e){return c.isBlobInstance(a)||c.handleErrors("Data argument should be a blob instance"),c.isString(b)||c.handleErrors("Filename argument should be a string"),d(a,b,e)}}}function FileSaverUtils(){return{handleErrors:function(a){throw new Error(a)},isString:function(a){return"string"==typeof a||a instanceof String},isUndefined:function(a){return void 0===a},isBlobInstance:function(a){return a instanceof Blob}}}function Blob(a,b){var c=a.Blob;return b.isUndefined(c)&&b.handleErrors("Blob is not supported. Please include blob polyfilll"),c}function SaveAs(a,b){var c=a.saveAs;return b.isUndefined(c)&&b.handleErrors("saveAs is not supported. Please include saveAs polyfill"),c}angular.module("ngFileSaver",[]).factory("FileSaver",["Blob","SaveAs","FileSaverUtils",FileSaver]).factory("FileSaverUtils",FileSaverUtils).factory("Blob",["$window","FileSaverUtils",Blob]).factory("SaveAs",["$window","FileSaverUtils",SaveAs]);
